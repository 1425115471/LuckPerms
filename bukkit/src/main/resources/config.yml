##############################################################################
# +------------------------------------------------------------------------+ #
# |                       LuckPerms Configuration                          | #
# |                  https://github.com/lucko/LuckPerms                    | #
# +------------------------------------------------------------------------+ #
##############################################################################

# The name of the server, used for server specific permissions. Set to 'global' to disable.
server: global

# If users on this server should have their global permissions applied.
# If set to false, only server specific permissions will apply for users on this server
include-global: true

# If users on this server should have their global world permissions applied.
# If set to false, only world specific permissions will apply for users on this server
include-global-world: true

# If users on this server should have global (non-server specific) groups applied
apply-global-groups: true

# If users on this server should have global (non-world specific) groups applied
apply-global-world-groups: true

# If this server is in offline or online mode.
# This setting allows a player to have the same UUID across a network of offline mode/mixed servers.

# You should generally reflect the setting in server.properties here. Except when...

# 1. You have Spigot servers connected to a BungeeCord proxy, with online-mode set to false, but 'bungeecord' set to true in the spigot.yml
#    AND 'ip-forward' set to true in the BungeeCord config.yml
#    In this case, set online-mode in LuckPerms to true, despite the server being in offline mode.

# 2. You are only running one server instance using LuckPerms, (not a network)
#    In this case, set online-mode to true no matter what is set in server.properties. (we can just fallback to the servers uuid cache)

# 3. If your proxy is running in offline mode, and you are using PaperSpigot (https://ci.destroystokyo.com/job/PaperSpigot/),
#    you should set "bungee-online-mode" to false in the paper.yml, and set "online-mode" to true in all LuckPerms configs.
#    This approach is thoroughly recommended for offline mode networks.
online-mode: true

# If the plugin should apply wildcard permissions.
# If set to true, LuckPerms will detect wildcard permissions, and resolve & apply all registered permissions matching
# the wildcard.
apply-wildcards: true

# If the plugin should parse regex permissions.
# If set to true, LuckPerms will detect regex permissions, marked with "r=" at the start of the node, and resolve &
# apply all registered permissions matching the regex.
apply-regex: true

# If the plugin should complete and apply shorthand permissions.
# If set to true, LuckPerms will detect and expand shorthand node patterns.
apply-shorthand: true

# If the plugin should send log notifications to users whenever permissions are modified.
log-notify: true

# If LuckPerms should print to console every time a plugin checks if a player has a permission
debug-permission-checks: false

# If the vanilla OP system is enabled. If set to false, all users will be de-opped, and the op/deop commands will be disabled.
enable-ops: true

# If set to true, any user with the permission "luckperms.autoop" will automatically be granted server operator status.
# This permission can be inherited, or set on specific servers/worlds, temporarily, etc.
# Additionally, setting this to true will force the "enable-ops" option above to false. All users will be de-opped unless
# they have the permission node, and the op/deop commands will be disabled.
#
# It is recommended that you use this option instead of assigning a single '*' permission.
auto-op: false

# If opped players should be allowed to use LuckPerms commands. Set to false to only allow users who have the permissions access to the commands
commands-allow-op: true

# The name of the server used within Vault operations. If you don't want Vault operations to be server specific, set this
# to "global".
vault-server: global

# If global permissions should be considered when retrieving meta or player groups
vault-include-global: true

# If Vault operations should ignore any world arguments if supplied.
vault-ignore-world: false

# Mirrors world names. Whenever LuckPerms checks what world a user is in, if the world name is in this list, the value assigned
# will be sent forward for permission calculation instead.
world-rewrite:
  #world_nether: world
  #world_the_end: world

# Rewrites group names. The underlying name of the group does not change, just the output in commands / placeholders / Vault.
group-name-rewrite:
  #default: Member

# Which storage method the plugin should use.
# Currently supported: mysql, sqlite, h2, json, yaml, mongodb
# Fill out connection info below if you're using MySQL or MongoDB
storage-method: h2

# This block enables support for split datastores.
split-storage:
  enabled: false
  methods:
    user: h2
    group: h2
    track: h2
    uuid: h2
    log: h2

data:
  address: localhost:3306
  database: minecraft
  username: root
  password: ''

  # Set to -1 to disable. If this is the only instance accessing the datastore, you can disable syncing.
  # e.g. if you're using sqlite or flatfile, this can be set to -1 to save resources.
  sync-minutes: 3
